name: Continuous Integration (CI) Tests

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

permissions:
    contents: write

jobs:  # Should have tests, too, but I don't care enough
    lint:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Code
                uses: actions/checkout@v4

            -   name: Set Up Lua
                uses: leafo/gh-actions-lua@v10

            -   name: Set Up LuaRocks
                uses: leafo/gh-actions-luarocks@v4

            -   name: Install Dependencies
                run: |
                    luarocks install --local --only-deps

            -   name: Lint Code
                run: |
                    luacheck .  # This might need adjusting

    docs:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Code
                uses: actions/checkout@v4

            -   name: Set Up Lua
                uses: leafo/gh-actions-lua@v10

            -   name: Set Up LuaRocks
                uses: leafo/gh-actions-luarocks@v4

            -   name: Install Dependencies
                run: |
                    luarocks install --local --only-deps
                    luarocks install ldoc

            -   name: Build Documentation
                run: |
                    ldoc source/ -o docs/  # Might need adjusting

    release:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Code
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0  # Fetch all history for changelog generation

            -   name: Set Up Lua
                uses: leafo/gh-actions-lua@v10

            -   name: Set Up LuaRocks
                uses: leafo/gh-actions-luarocks@v4

            -   name: Install Dependencies
                run: |
                    luarocks install --local --only-deps

            -   name: Configure Git
                run: |
                    git config user.name "${{ github.actor }}"
                    git config user.email "${{ github.actor }}@users.noreply.github.com"

            -   name: Determine Version Type from Commit Message
                id: get_version
                run: |
                    echo "Commit message: ${{ github.event.head_commit.message }}"
                    if [[ "${{ github.event.head_commit.message }}" == feat\!* ]]; then
                        echo "::set-output name=version_type::major"
                        echo "::set-output name=release_proceed::true"
                    elif [[ "${{ github.event.head_commit.message }}" == feat:* ]]; then
                        echo "::set-output name=version_type::minor"
                        echo "::set-output name=release_proceed::true"
                    elif [[ "${{ github.event.head_commit.message }}" == fix:* ]]; then
                        echo "::set-output name=version_type::patch"
                        echo "::set-output name=release_proceed::true"
                    else
                        echo "::set-output name=release_proceed::false"
                    fi

            -   name: Run Release Script
                if: steps.get_version.outputs.release_proceed == 'true'
                run: |
                    ./scripts/release.sh ${{ steps.get_version.outputs.version_type }}
                    # This might need adjusting

    deploy:
        needs: docs
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Code
                uses: actions/checkout@v4

            -   name: Deploy Documentation to GitHub Pages
                uses: JamesIves/github-pages-deploy-action@v4  # This might need adjusting
                with:
                    branch: docs
                    folder: docs/